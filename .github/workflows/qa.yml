name: Reusable QA Workflow

# qa.yml - Sección inputs actualizada
on:
  workflow_call:
    secrets:
      SONAR_TOKEN:
        required: true
    inputs:
      branch:
        required: false
        type: string
        default: "qa"
      projectBaseDir:
        required: false
        type: string
        default: "./pipeline-build"
      sonar_args:
        required: false
        type: string
        default: ""

permissions:
  actions: read
  contents: read
  security-events: write

jobs:
  test-qa:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout del código
        uses: actions/checkout@v4

      - name: Configurar Python
        uses: actions/setup-python@v5
        with:
          python-version: "3.12"

      - name: Instalar dependencias
        run: |
          pip install flask pytest

      - name: Ejecutar tests
        run: pytest -v
        
  test-integration-qa:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout del código
        uses: actions/checkout@v4

      - name: Ejecutar análisis de integración
        run: echo "Comprueba que cada función o módulo funciona bien individualmente"
    needs: test-qa

  test-lint-qa:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout del código
        uses: actions/checkout@v4

      - name: Ejecutar análisis
        run: echo "Control de estilo, errores comunes"
    needs: test-integration-qa

  sonarcloud-qa:
      name: Análisis de SonarCloud
      runs-on: ubuntu-latest
      needs: test-lint-qa
  
      steps:
        - name: Checkout del código
          uses: actions/checkout@v4
          with:
            fetch-depth: 0  # Necesario para análisis completo de Sonar
 
        - name: Configurar Python
          uses: actions/setup-python@v5
          with:
            python-version: '3.10'
        
        - name: Clonar el repositorio app
          uses: actions/checkout@v4
          with:
                repository: dariasmoises979-blip/app
                ref: main
                path: pipeline-build
                fetch-depth: 1
                token: ${{ secrets.GITHUB_TOKEN }}

        - name: Instalar dependencias
          working-directory: ./pipeline-build
          run: |
              python -m pip install --upgrade pip
              pip install -r local/requirements.txt
  
        - name: Analizar con SonarCloud
          uses: SonarSource/sonarcloud-github-action@v2
          with:
            projectBaseDir: ./pipeline-build   # 🔹 Analiza el contenido de app
          env:
            SONAR_TOKEN: ${{ secrets.SONAR_TOKEN }}
            SONAR_HOST_URL: https://sonarcloud.io
  
        - name: Mostrar enlace de resultados
          run: |
            echo "Revisión completada. Puedes ver los resultados en:"
            echo "https://sonarcloud.io/project/overview?id=dariasmoises979-blip_app"
  

  secrets_detection:
    runs-on: ubuntu-latest
    permissions:
      security-events: write
      actions: read
      contents: read

    steps:
      - name: Checkout del código
        uses: actions/checkout@v4

      - name: Inicializar CodeQL
        uses: github/codeql-action/init@v3
        with:
          languages: python

      - name: Ejecutar análisis CodeQL
        uses: github/codeql-action/analyze@v3
        with:
          category: "secret"

      - name: Mensaje de confirmación
        run: echo "Asegura que no se suban claves o contraseñas"
    needs: sonarcloud-qa

  security_vulnerabilities:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout del código
        uses: actions/checkout@v4

      - name: Inicializar CodeQL
        uses: github/codeql-action/init@v3
        with:
          languages: python

      - name: Ejecutar análisis de CodeQL
        uses: github/codeql-action/analyze@v3
        with:
          category: "security"

      - name: Mensaje de confirmación
        run: echo "Identifica vulnerabilidades de seguridad en el código"
    needs: secrets_detection