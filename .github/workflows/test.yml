name: Reusable Test Workflow

on:
  workflow_call:
    inputs:
      external_repo:
        required: true
        type: string
        description: 'Repositorio externo que contiene la app a testear'
      external_repo_ref:
        required: true
        type: string
        description: 'Rama o tag del repositorio externo'
      external_repo_path:
        required: false
        type: string
        default: './app-repo'
        description: 'Ruta donde se clonar√° el repo externo'
    secrets:
      EXTERNAL_REPO_TOKEN:
        required: true
        description: 'Token para acceder al repositorio app'

permissions:
  actions: read
  contents: write

jobs:
  test-unit:
    name: üß™ Unit Tests
    runs-on: ubuntu-latest

    steps:
      - name: üîÑ Clonar el repositorio externo
        uses: actions/checkout@v4
        with:
          repository: ${{ inputs.external_repo }}
          ref: ${{ inputs.external_repo_ref }}
          path: ${{ inputs.external_repo_path }}
          token: ${{ secrets.EXTERNAL_REPO_TOKEN }}

      - name: ‚öôÔ∏è Configurar Python
        uses: actions/setup-python@v5
        with:
          python-version: "3.12"

      - name: üì¶ Instalar dependencias
        working-directory: ${{ inputs.external_repo_path }}/local
        run: |
          pip install -r requirements.txt

      - name: ‚ñ∂Ô∏è Ejecutar tests unitarios
        working-directory: ${{ inputs.external_repo_path }}/system_info_app
        run: |
          pytest -v

  # (Opcional: puedes a√±adir aqu√≠ lint, integraci√≥n o sonar si quieres)
