apiVersion: apps/v1
kind: Deployment
metadata:
  name: qa-info-deployment
  namespace: default
  labels:
    app: qa-info
spec:
  replicas: 3
  selector:
    matchLabels:
      app: qa-info
  template:
    metadata:
      labels:
        app: qa-info
    spec:
      imagePullSecrets:
      - name: dockerhub-secret  # Añadido: referencia al secret de DockerHub
      containers:
      - name: qa-info
        image: dariasmoises979/mi-aplicacion:staging
        ports:
        - containerPort: 5000  # Corregido: tu Dockerfile expone 5000, no 80
          name: http
          protocol: TCP
        # REMOVIDO 'command' - deja que el Dockerfile use su propio CMD
        env:
        - name: FLASK_ENV
          value: "production"
        resources:
          requests:
            memory: "128Mi"
            cpu: "100m"
          limits:
            memory: "256Mi"
            cpu: "200m"
        livenessProbe:
          httpGet:
            path: /
            port: 5000
          initialDelaySeconds: 10
          periodSeconds: 10
          timeoutSeconds: 3
          failureThreshold: 3
        readinessProbe:
          httpGet:
            path: /
            port: 5000
          initialDelaySeconds: 5
          periodSeconds: 5
          timeoutSeconds: 2
          failureThreshold: 3
---
apiVersion: v1
kind: Service
metadata:
  name: qa-info-service
  namespace: default
spec:
  selector:
    app: qa-info
  ports:
  - protocol: TCP
    port: 80          # Puerto externo del servicio
    targetPort: 5000  # Puerto del contenedor
  type: LoadBalancer  # O ClusterIP según necesites